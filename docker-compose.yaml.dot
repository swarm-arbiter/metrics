version: '3.3'

services:
  # Export infomation about host nodes
  node_stat:
    hostname: "\{{ .Node.Hostname \}}-node-stat"
    image: prom/node-exporter:v0.17.0
    networks:
      - revprox_ingress
      - internal
    environment:
      - "SERVICE_TAGS=node-\{{ .Node.Hostname \}}"
    volumes:
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /proc:/host/proc:ro
    deploy:
      mode: global
    environment:
      - "SERVICE_TAGS=host-\{{ .Node.Hostname \}},instance-\{{ .Node.Hostname \}}"

  # Export infomation about running containers
  cadvisor:
    image: google/cadvisor:v0.32.0
    hostname: "\{{ .Node.Hostname \}}-cadvisor"
    networks:
      - internal
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global
    environment:
      - "SERVICE_TAGS=host-\{{ .Node.Hostname \}},instance-cadvisor-\{{ .Node.Hostname \}},prometheus"

  # Promethus to collect metric data
  prometheus:
    image: prom/prometheus:v2.6.0
    networks:
      - revprox_ingress
      - internal
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    volumes:
      - {{= stack.data_dir }}/resources/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - {{= stack.data_dir }}/persistent/prometheus:/prometheus:rw
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - "traefik.docker.network=revprox_ingress"
        - "traefik.port=9090"
        - "traefik.backend={{= config.prometheus_domain }}"
        - "traefik.frontend.rule=Host:{{= config.prometheus_domain }}"


  # Display pretty dashboards of prometheus data
  grafana:
    image: grafana/grafana:5.4.2
    networks:
      - revprox_ingress
      - internal
    volumes:
      - {{= stack.data_dir}}/persistent/grafana:/var/lib/grafana:rw
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - "traefik.docker.network=revprox_ingress"
        - "traefik.port=3000"
        - "traefik.backend={{= config.grafana_domain }}"
        - "traefik.frontend.rule=Host:{{= config.grafana_domain }}"

networks:
  revprox_ingress:
    external: true

  # Internal network overwhich metrics services can communicate with one another
  internal:
    driver: overlay
